unit wcgui;

{ DO NOT EDIT THIS FILE!!! }
{ This file is automatically generated from wcgui.h by cpp2pas. }

interface

uses WinTypes, wctype;

const SIZE_PACKAGE_NAME       = 64;
const SIZE_PACKAGE_VERSION    = 10;
type TWildcatRequestType = WORD;
const wrNone = 0;
const wrLoginUser = 1;
const wrGetConferenceCount = 2;
const wrGetEffectiveConferenceCount = 3;
const wrGetConfDescs = 4;
const wrGetConferenceGroupCount = 5;
const wrGetEffectiveConferenceGroupCount = 6;
const wrGetConferenceGroups = 7;
const wrGetConferenceGroupAreas = 8;
const wrAddMessage = 9;
const wrGetFileGroupCount = 10;
const wrGetEffectiveFileGroupCount = 11;
const wrGetFileGroups = 12;
const wrGetFileGroupAreas = 13;
const wrGetFileAreaCount = 14;
const wrGetEffectiveFileAreaCount = 15;
const wrGetFileAreas = 16;
const wrListFilesByName = 17;
const wrListFilesByDate = 18;
const wrListFilesBySearch = 19;
const wrGetFileDescription = 20;
const wrGetCurrentUser = 21;
const wrUpdateCurrentUser = 22;
const wrGetUserInfo = 23;
const wrGetWhosOnline = 24;
const wrDownloadFile = 25;
const wrUploadFile = 26;
const wrUploadAttachment = 27;
const wrGetSystemInfo = 28;
const wrGetObjectFlags = 29;
const wrResolveFileName = 30;
const wrGetUserList = 31;
const wrDeleteFile = 32;
const wrViewArchive = 33;
const wrGetNodeInfoByName = 34;
const wrSetLastRead = 35;
const wrDeleteMessage = 36;
const wrSetConferenceFlags = 37;
const wrGetPackageVersion = 38;
const wrSearchUserNames = 39;
const wrListMessagesByAreaNumber = 40;
const wrListMessagesByAreaMsgId = 41;
const wrListMessagesByAreaDate = 42;
const wrListMessagesBySearch = 43;
const wrListMessagesByUnread = 44;
const wrSetMultipleConferenceFlags = 45;
const wrUpdateFileInfo = 46;
const wrGetObjectFlagsByName = 47;
const wrRequestOfflineFiles = 48;
const wrGetSecurityProfile = 49;
const wrGetDownloadStats = 50;
const wrMarkMessageRead = 51;
const wrGetVolatileConfInfo = 52;
const wrListConferencesByNumber = 53;
const wrListConferencesByName = 54;
const wrListMessagesBackwardsByMsgId = 55;
const wrListMessagesBackwardsByNumber = 56;
const wrKeepAlive = 57;
const wrGetVolatileConfInfoEx = 58;
const wrGetTimeLeftOnline = 59;
const wrWriteActivityLogEntry = 60;
const wrUploadFileEx = 61;
const wrGetServiceByName = 62;
const wrGetServerContextHandle = 63;
const wrCopyBeforeDownload = 64;
const wrGetServerChallengeString = 65;
const wrGetPredefinedChatChannels = 66;
const wrGetObjectInfo = 67;
const wrMAX = 68;
const wrListFiles_SetFileArea = 0;
const wrListFiles_SetFileAreaDone = 1;
const wrFileTransfer_Data = 2;
const wrFileTransfer_Error = 3;
const wrAddMessage_Text = 4;
const wrViewArchive_Data = 5;
const wrSearchMessages_SetConfs = 6;
const wrSearchMessages_SetConfsDone = 7;
const wrUploadAttachment_SetMessage = 8;
const wrUploadAttachment_SetMessageDone = 9;
const wrListMessages_GetMore = 10;
const wrListMessages_GetAll = 11;
const wrSetMultipleConferenceFlags_SetAll = 12;
const wrSetMultipleConferenceFlags_SetData = 13;
const wrSetMultipleConferenceFlags_SetDone = 14;
const wrListFiles_GetMore = 15;
const wrListFiles_GetAll = 16;
const wrListFiles_Pause = 17;
const wrListMessages_MsgHeader = 18;
const wrListMessages_MsgText = 19;
const wrRequestOfflineFiles_Submit = 20;
const wrRequestOfflineFiles_Done = 21;
const wrGetVolatileConfInfo_SetConfs = 22;
const wrGetVolatileConfInfo_SetConfsDone = 23;
const wrCopyBeforeDownload_Submit = 24;
const wrCopyBeforeDownload_Status = 25;
const wrCopyBeforeDownload_Remove = 26;
const NAV_STATUS_BASE                   =  $40000000;
const NAV_SUCCESS                       = NAV_STATUS_BASE + 0;
const NAV_DOWNLOAD_OVER_DAILY_KBYTE     = NAV_STATUS_BASE + 1;
const NAV_DOWNLOAD_OVER_DAILY_COUNT     = NAV_STATUS_BASE + 2;
const NAV_DOWNLOAD_OVER_KBYTE_RATIO     = NAV_STATUS_BASE + 3;
const NAV_DOWNLOAD_OVER_DOWNLOAD_RATIO  = NAV_STATUS_BASE + 4;
const NAV_DOWNLOAD_INSUFFICIENT_BALANCE = NAV_STATUS_BASE + 5;
const NAV_USER_OUT_OF_TIME              = NAV_STATUS_BASE + 6;
const NAV_REQUEST_OUT_OF_ORDER          = NAV_STATUS_BASE + 7;
const NAV_USER_NOT_FOUND                = NAV_STATUS_BASE + 8;
const SIZE_FILE_DATA_BLOCK = 1024;
type TWildcatRequest = object
  rtype: TWildcatRequestType;
end;

type TSortedList_Request = object(TWildcatRequest)
  sorted: Longint;
end;

const LOGIN_NETSCAPE_16        =  $00000001;
const LOGIN_NETSCAPE_32        =  $00000002;
const LOGIN_IEXPLORER_16       =  $00000004;
const LOGIN_IEXPLORER_32       =  $00000008;
const LOGIN_NO_QUESNEW         =  $00000100;
const LOGIN_IGNORE_IDLE_TIME   =  $00000200;
const LOGIN_IGNORE_TIME_ONLINE =  $00000400;
type TLoginUser_Request = object(TWildcatRequest)
  ClientRequestTypes: Word;
  Name: array [0..MAX_USER_NAME-1] of char;
  Password: array [0..40-1] of char;
  AddNewUser: Byte;
end;

type TLoginUser_Response = object(TWildcatRequest)
  error: Longint;
  SystemAccess: Longint;
  MaxLoginAttempts: Longint;
  Info: array [0..420-1] of char;
  WWWHostname: array [0..80-1] of char;
  ServerRequestTypes: Word;
  Flags: Longint;
  IdleTimeout: Word;
  Reserved: array [0..4-1] of Byte;
end;

type TGetCount_Response = object(TWildcatRequest)
  count: Longint;
end;

const guiShowPasswordFiles =  $01;
const guiWindowsCharset    =  $02;
const guiNAVSMTP           =  $04;
type TGetSystemInfo_Response = object(TWildcatRequest)
  BBSName: array [0..SIZE_MAKEWILD_BBSNAME-1] of char;
  SysopName: array [0..MAX_USER_NAME-1] of char;
  RegString: array [0..SIZE_MAKEWILD_REGSTRING-1] of char;
  PacketId: array [0..SIZE_MAKEWILD_PACKETID-1] of char;
  Flags: Longint;
end;

type TGetObjectFlags_Request = object(TWildcatRequest)
  ObjectID: Longint;
end;

type TGetObjectFlags_Response = object(TWildcatRequest)
  Flags: Longint;
end;

type TGetObjectFlagsByName_Request = object(TWildcatRequest)
  ObjectName: array [0..MAX_PATH-1] of char;
end;

type TGetObjectInfo_Request = object(TWildcatRequest)
  ObjectId: Longint;
  ObjectClass: Longint;
  ObjectName: array [0..MAX_PATH-1] of char;
end;

type TGetObjectInfo_Response = object(TWildcatRequest)
  ObjectId: Longint;
  ObjectFlags: Longint;
  ObjectNumber: Longint;
  ObjectName: array [0..MAX_PATH-1] of char;
end;

type TGetServiceByName_Request = object(TWildcatRequest)
  name: array [0..SIZE_SERVICE_NAME-1] of char;
end;

type TGetServiceByName_Response = object(TWildcatRequest)
  info: TWildcatService;
end;

const MAX_LOGENTRY_LEN = 256;
type TWriteActivityLogEntry_Request = object(TWildcatRequest)
  len: Longint;
  text: array [0..MAX_LOGENTRY_LEN-1] of char;
end;

type TGetTimeLeftOnline_Response = object(TWildcatRequest)
  TimeLeft: Longint;
end;

type TGetServerContextHandle_Response = object(TWildcatRequest)
  handle: Longint;
end;

const MAX_CHALLENGE_LEN = 80;
type TGetServerChallengeString_Response = object(TWildcatRequest)
  len: Longint;
  data: array [0..MAX_CHALLENGE_LEN-1] of char;
end;

const guiPromptToKillMsg    =  $01;
const guiPromptToKillAttach =  $02;
const guiAllowHighAscii     =  $04;
const guiAllowCarbon        =  $08;
const guiAllowReturnReceipt =  $10;
const guiLongHeaderFormat   =  $20;
const guiAllowAttach        =  $40;
type TGuiConfDesc = object
  Number: Longint;
  Name: array [0..SIZE_CONFERENCE_NAME-1] of char;
  ConfSysop: array [0..SIZE_USER_NAME-1] of char;
  MailType: Byte;
  HiMsg: Longint;
  HiMsgId: Longint;
  LoMsg: Longint;
  LoMsgId: Longint;
  LastRead: Longint;
  ConfAccess: Longint;
  ConfFlags: Longint;
  ValidNames: Longint;
  FirstUnread: Longint;
  ReadFlags: Longint;
end;

type TGetConfDescs_Response = object(TWildcatRequest)
  cd: TGuiConfDesc;
end;

const LISTCONFERENCES_GETALL =  $FFFFFFFF;
type TListConferencesByNumber_Request = object(TWildcatRequest)
  start: Longint;
  count: Longint;
end;

type TListConferencesByName_Request = object(TWildcatRequest)
  name: array [0..SIZE_CONFERENCE_NAME-1] of char;
  count: Longint;
end;

type TGetVolatileConfInfo_SetConfs = object(TWildcatRequest)
  start: Longint;
  count: Longint;
end;

type TGetVolatileConfInfo_Response = object(TWildcatRequest)
  Conf: Longint;
  HiMsg: Longint;
  HiMsgId: Longint;
  LoMsg: Longint;
  LoMsgId: Longint;
  LastRead: Longint;
  FirstUnread: Longint;
end;

type TGetVolatileConfInfoEx_Response = object(TWildcatRequest)
  Conf: Longint;
  HiMsg: Longint;
  HiMsgId: Longint;
  LoMsg: Longint;
  LoMsgId: Longint;
  LastRead: Longint;
  FirstUnread: Longint;
  ReadFlags: Longint;
end;

type TGetConferenceGroups_Response = object(TWildcatRequest)
  cg: TConferenceGroup;
end;

type TGetConferenceGroupAreas_Request = object(TWildcatRequest)
  group: Longint;
end;

type TGetConferenceGroupAreas_Response = object(TWildcatRequest)
  start: Word;
  runlength: Word;
end;

type TSetConferenceFlags_Request = object(TWildcatRequest)
  conference: Longint;
  flags: Longint;
end;

type TSetMultipleConferenceFlags_SetAll = object(TWildcatRequest)
  flags: Longint;
end;

type TSetMultipleConferenceFlags_SetData = object(TWildcatRequest)
  start: Longint;
  runlength: Longint;
  flags: Longint;
end;

type TSetLastRead_Request = object(TWildcatRequest)
  conference: Longint;
  lastread: Longint;
end;

type TGetSecurityProfile_Response = object(TWildcatRequest)
  Sec: TSecurityProfile;
end;

type TGetDownloadStats_Response = object(TWildcatRequest)
  Uploads: Longint;
  TotalUploadKbytes: Longint;
  Downloads: Longint;
  TotalDownloadKbytes: Longint;
  DownloadCountToday: Longint;
  DownloadKbytesToday: Longint;
end;

type TDeleteMessage_Request = object(TWildcatRequest)
  conference: Longint;
  msgid: Longint;
end;

type TDeleteMessage_Response = object(TWildcatRequest)
  conference: Longint;
  msgid: Longint;
  error: Longint;
end;

const READMESSAGE_SNOOP =  $0001;
type TMarkMessageRead_Request = object(TWildcatRequest)
  conference: Longint;
  msgid: Longint;
  flags: Longint;
end;

const SIZE_MSG_BLOCK_TEXT = 1024;
const guiMsgPrivate  = 1;
const guiMsgReceived = 2;
const guiMsgDeleted  = 4;
const guiMsgAttach   = 8;
type TGuiMsgHeader = object
  Id: Longint;
  Number: Longint;
  From: TUserInfo;
  Whoto: TUserInfo;
  Subject: array [0..SIZE_MESSAGE_SUBJECT-1] of char;
  MsgTime: TFileTime;
  Reference: Longint;
  MsgFlags: Word;
  MsgSize: Longint;
  Conference: Longint;
  PrevUnread: Longint;
  NextUnread: Longint;
  Attachment: array [0..SIZE_SHORT_FILE_NAME-1] of char;
end;

type TListMessages_MsgHeader_Response = object(TWildcatRequest)
  mh: TGuiMsgHeader;
end;

type TListMessages_GetMore = object(TWildcatRequest)
  count: Longint;
end;

type TListMessages_MsgText_Response = object(TWildcatRequest)
  len: Word;
  text: array [0..SIZE_MSG_BLOCK_TEXT-1] of char;
end;

const LISTMESSAGES_TEXT       =  $01;
const LISTMESSAGES_SNOOP      =  $02;
const LISTMESSAGES_SUPERSNOOP =  $04;
type TListMessagesByAreaNumber_Request = object(TWildcatRequest)
  conference: Longint;
  number: Longint;
  count: Longint;
  flags: Word;
end;

type TListMessagesByAreaMsgId_Request = object(TWildcatRequest)
  conference: Longint;
  msgid: Longint;
  count: Longint;
  flags: Word;
end;

type TListMessagesByAreaDate_Request = object(TWildcatRequest)
  conference: Longint;
  postedtime: TFileTime;
  count: Longint;
  flags: Word;
end;

type TListMessagesBackwardsByNumber_Request = object(TWildcatRequest)
  conference: Longint;
  number: Longint;
  count: Longint;
  flags: Word;
end;

type TListMessagesBackwardsByMsgId_Request = object(TWildcatRequest)
  conference: Longint;
  msgid: Longint;
  count: Longint;
  flags: Word;
end;

const MSGSEARCH_FORWARD  =  $0001;
const MSGSEARCH_BACKWARD =  $0002;
type TListMessagesBySearch_Request = object(TWildcatRequest)
  SearchFrom: array [0..SIZE_USER_NAME-1] of char;
  SearchTo: array [0..SIZE_USER_NAME-1] of char;
  SearchSubject: array [0..SIZE_MESSAGE_SUBJECT-1] of char;
  SearchBody: array [0..80-1] of char;
  SearchNumber: Longint;
  sFlags: Longint;
  flags: Word;
end;

type TListMessagesByUnread_Request = object(TWildcatRequest)
  flags: Word;
end;

type TSearchMessages_SetConfs = object(TWildcatRequest)
  start: Longint;
  runlength: Longint;
end;

const SIZE_MSG_TEXT_BLOCK = 1024;
type TAddMessage_Request = object(TWildcatRequest)
  mh: TMsgHeader;
end;

type TAddMessage_Response = object(TWildcatRequest)
  error: Longint;
  msgid: Longint;
end;

type TAddMessage_MessageText = object(TWildcatRequest)
  size: Word;
  text: array [0..SIZE_MSG_TEXT_BLOCK-1] of char;
end;

type TGetFileAreas_Response = object(TWildcatRequest)
  fa: TFileArea;
  Access: Longint;
end;

type TGetFileGroups_Response = object(TWildcatRequest)
  fg: TFileGroup;
end;

type TGetFileGroupAreas_Request = object(TWildcatRequest)
  group: Longint;
end;

type TGetFileGroupAreas_Response = object(TWildcatRequest)
  start: Word;
  runlength: Word;
end;

type TListFiles_Request = object(TWildcatRequest)
  count: Longint;
end;

type TListFilesByDate_Request = object(TListFiles_Request)
  startdate: TFileTime;
end;

type TListFilesBySearch_Request = object(TListFiles_Request)
  Target: array [0..80-1] of char;
end;

type TSetArea_Request = object(TWildcatRequest)
  start: Word;
  runlength: Word;
end;

type TListFiles_GetMore = object(TWildcatRequest)
  count: Longint;
end;

const guiFreeFile           =  $01;
const guiCopyBeforeDownload =  $02;
const guiOffline            =  $04;
const guiFreeTime           =  $08;
type TListFiles_Response = object(TWildcatRequest)
  Area: Longint;
  Name: array [0..SIZE_SHORT_FILE_NAME-1] of char;
  Description: array [0..SIZE_FILE_DESCRIPTION-1] of char;
  UploaderId: Longint;
  UploaderName: array [0..SIZE_USER_NAME-1] of char;
  Password: array [0..SIZE_PASSWORD-1] of char;
  Size: Longint;
  FileTime: TFileTime;
  LastAccessed: TFileTime;
  Flags: Longint;
  Downloads: Longint;
  Cost: Longint;
  LongDesc: Word;
end;

type TListFilesEx_Response = object(TWildcatRequest)
  Area: Longint;
  Name: array [0..SIZE_LONG_FILE_NAME-1] of char;
  Description: array [0..SIZE_FILE_DESCRIPTION-1] of char;
  UploaderId: Longint;
  UploaderName: array [0..SIZE_USER_NAME-1] of char;
  Password: array [0..SIZE_PASSWORD-1] of char;
  Size: Longint;
  FileTime: TFileTime;
  PostTime: TFileTime;
  LastAccessed: TFileTime;
  Flags: Longint;
  Downloads: Longint;
  Cost: Longint;
  LongDesc: Word;
end;

type TGetFileDescription_Request = object(TWildcatRequest)
  area: Word;
  name: array [0..SIZE_SHORT_FILE_NAME-1] of char;
end;

type TGetFileDescription_Response = object(TWildcatRequest)
  len: Word;
  text: array [0..MAX_FILE_LONGDESC_LINES*SIZE_FILE_LONGDESC-1] of char;
end;

type TResolveFileName_Request = object(TWildcatRequest)
  filename: array [0..SIZE_SHORT_FILE_NAME-1] of char;
end;

type TDeleteFile_Request = object(TWildcatRequest)
  filename: array [0..SIZE_SHORT_FILE_NAME-1] of char;
  area: Longint;
  disktoo: Longint;
end;

type TDeleteFile_Response = object(TWildcatRequest)
  error: Longint;
end;

type TUpdateFileInfo_Request = object(TWildcatRequest)
  area: Longint;
  filename: array [0..SIZE_SHORT_FILE_NAME-1] of char;
  origpassword: array [0..SIZE_PASSWORD-1] of char;
  description: array [0..SIZE_FILE_DESCRIPTION-1] of char;
  password: array [0..SIZE_PASSWORD-1] of char;
  updatelongdesc: Longint;
  longdescbytes: Word;
  longdescription: array [0..MAX_FILE_LONGDESC_LINES*SIZE_FILE_LONGDESC-1] of char;
end;

type TUpdateFileInfo_Response = object(TWildcatRequest)
  result: Longint;
end;

type TFileRequest = object
  User: TUserInfo;
  RequestTime: TFileTime;
  FileName: array [0..SIZE_SHORT_FILE_NAME-1] of char;
  FileArea: Longint;
  Reserved: array [0..100-1] of char;
end;

type TRequestOfflineFiles_Submit = object(TWildcatRequest)
  FileName: array [0..SIZE_SHORT_FILE_NAME-1] of char;
  FileArea: Longint;
end;

type TGetCurrentUser_Response = object(TWildcatRequest)
  User: TUser;
end;

type TUpdateCurrentUser_Request = object(TWildcatRequest)
  User: TUser;
end;

type TGetUserInfo_Request = object(TWildcatRequest)
  UserName: array [0..SIZE_USER_NAME-1] of char;
  UserId: Longint;
end;

type TUserInfo_Response = object(TWildcatRequest)
  UserInfo: TUserInfo;
  From: array [0..SIZE_USER_FROM-1] of char;
  LastCall: TFileTime;
end;

type TGetNodeInfo_Request = object(TWildcatRequest)
  username: array [0..SIZE_USER_NAME-1] of char;
end;

type TWhosOnline_Response = object(TWildcatRequest)
  NodeInfo: TwcNodeInfo;
end;

type TSearchUserNames_Request = object(TWildcatRequest)
  username: array [0..SIZE_USER_NAME-1] of char;
end;

type TDownloadFile_Request = object(TWildcatRequest)
  filename: array [0..MAX_PATH-1] of char;
  have: Longint;
  crc: Longint;
end;

type TDownloadFile_Response = object(TWildcatRequest)
  error: Longint;
  resume: Longint;
  filesize: Longint;
end;

type TUploadFile_Request = object(TWildcatRequest)
  filerec: Wildcat5::TFullFileRecord;
end;

type TUploadFile_Response = object(TWildcatRequest)
  error: Longint;
end;

const UPLOADFILE_OVERWRITE =  $01;
type TUploadFileEx_Request = object(TWildcatRequest)
  filerec: Wildcat5::TFullFileRecord;
  flags: Word;
end;

type TUploadAttachment_Request = object(TWildcatRequest)
  filesize: Longint;
end;

type TUploadAttachment_SetMessage_Request = object(TWildcatRequest)
  conference: Word;
  msgid: Longint;
end;

type TUploadAttachment_Response = object(TWildcatRequest)
  error: Longint;
end;

type TFileTransfer_Error = object(TWildcatRequest)
  error: Longint;
end;

type TFileTransfer_Data = object(TWildcatRequest)
  size: Word;
  data: array [0..SIZE_FILE_DATA_BLOCK-1] of char;
end;

type TViewArchive_Request = object(TWildcatRequest)
  area: Longint;
  filename: array [0..SIZE_SHORT_FILE_NAME-1] of char;
end;

type TViewArchive_Response = object(TWildcatRequest)
  error: Longint;
end;

type TViewArchive_Data = object(TWildcatRequest)
  size: Word;
  data: array [0..SIZE_FILE_DATA_BLOCK-1] of char;
end;

type TCopyBeforeDownload_Submit_Request = object(TWildcatRequest)
  id: Longint;
  area: Longint;
  fn: array [0..SIZE_SHORT_FILE_NAME-1] of char;
end;

type TCopyBeforeDownload_Submit_Response = object(TWildcatRequest)
  id: Longint;
  result: Longint;
end;

type TCopyBeforeDownload_Status_Response = object(TWildcatRequest)
  id: Longint;
  result: Longint;
  cookie: Longint;
end;

type TCopyBeforeDownload_Remove_Request = object(TWildcatRequest)
  id: Longint;
end;

type TGetPackageVersion_Request = object(TWildcatRequest)
  PackageName: array [0..SIZE_PACKAGE_NAME-1] of char;
  PackageVersion: array [0..SIZE_PACKAGE_VERSION-1] of char;
end;

type TGetPackageVersion_Response = object(TWildcatRequest)
  error: Longint;
  PackageName: array [0..SIZE_PACKAGE_NAME-1] of char;
  ShortPackageName: array [0..SIZE_SHORT_FILE_NAME-1] of char;
  PackageVersion: array [0..SIZE_PACKAGE_VERSION-1] of char;
  PackageInfoFilename: array [0..MAX_PATH-1] of char;
  UpgradeVersion: Longint;
  PatchAvailable: Longint;
  UpgradeFilename: array [0..MAX_PATH-1] of char;
end;

type TGuiChannelMessage = object
  DestId: Longint;
  UserData: Word;
  DataSize: Word;
  Data: array [0..MAX_CHANNEL_MESSAGE_SIZE-1] of Byte;
end;

type TGetPredefinedChatChannels_Response = object(TWildcatRequest)
  Id: Longint;
  Flags: Longint;
  Length: Longint;
  ChannelName: array [0..MAX_PATH-1] of char;
end;

const NAVMSG_DOWNLOAD = 1;
const NAVMSG_RUNCLIENT = 2;
const NAVMSG_UPLOAD = 3;
type TNavigatorDownload = object
  Cookie: Longint;
  FileName: array [0..16-1] of char;
  FileSize: Longint;
end;

type TNavigatorRunClient = object
  CommandLine: array [0..MAX_PATH-1] of char;
end;

type TNavigatorUpload = object
  FileName: array [0..16-1] of char;
end;

const MAGIC_LISTEN_REQUEST =  $8001;
const MAGIC_ACCEPT_REQUEST =  $8002;
type TSocketListenRequest = object
  MagicListenRequest: Word;
  RequestedPort: Word;
end;

type TSocketListenConnection = object
  AcceptHandle: Longint;
end;

type TSocketAcceptRequest = object
  MagicAcceptRequest: Word;
  AcceptHandle: Longint;
end;


implementation


end.
