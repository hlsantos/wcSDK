// File: TConfDesc.java
// (c) copyright 2002 Santronics Software Inc.
//
//****************************************************
// DO NOT EDIT THIS FILE!!!
// CPP2JAVA GENERATED FROM SOURCE FILE: wctype.h
//****************************************************
//

package COM.winserver.wildcat;

import java.io.IOException;

public class TConfDesc extends WcRecord {
  public int ObjectId;
  public int Number;
  public String Name;
  public String ConferenceSysop;
  public String EchoTag;
  public String ReplyToAddress;
  public String Distribution;
  public int MailType;
  public boolean PromptToKillMsg;
  public boolean PromptToKillAttach;
  public boolean AllowHighAscii;
  public boolean AllowCarbon;
  public boolean AllowReturnReceipt;
  public boolean LongHeaderFormat;
  public boolean AllowAttach;
  public boolean ShowCtrlLines;
  public int ValidateNames;
  public int DefaultFileGroup;
  public int MaxMessages;
  public int DaysToKeepReceivedMail;
  public int DaysToKeepPublicMail;
  public int RenumberThreshold;
  public int DaysToKeepExternalMail;
  public boolean  DeleteSMTPDelivered;
  public boolean PublishAsLocalNewsGroup;
  public int Options;
  public int AuthorType;
  public int UnixCreationTime;
  public String DefaultFromAddress;
  public int  wVersion;

  // Total size
  public static final int SIZE = 0+4+4+60+16+28+64+72+72+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+6*1+72+2;

  // Constructors
  public TConfDesc()
  {
  }

  public TConfDesc(byte[] x)
  {
    fromByteArray(x);
  }

  // Methods
  protected void writeTo(WcOutputStream out) throws IOException
  {
    super.writeTo(out);
    out.writeInt(ObjectId);
    out.writeInt(Number);
    out.writeString(Name, 60);
    out.write(new byte[16]);
    out.writeString(ConferenceSysop, 28);
    out.writeString(EchoTag, 64);
    out.writeString(ReplyToAddress, 72);
    out.writeString(Distribution, 72);
    out.writeInt(MailType);
    out.writeBoolean(PromptToKillMsg);
    out.writeBoolean(PromptToKillAttach);
    out.writeBoolean(AllowHighAscii);
    out.writeBoolean(AllowCarbon);
    out.writeBoolean(AllowReturnReceipt);
    out.writeBoolean(LongHeaderFormat);
    out.writeBoolean(AllowAttach);
    out.writeBoolean(ShowCtrlLines);
    out.writeInt(ValidateNames);
    out.writeInt(DefaultFileGroup);
    out.writeInt(MaxMessages);
    out.writeInt(DaysToKeepReceivedMail);
    out.writeInt(DaysToKeepPublicMail);
    out.writeInt(RenumberThreshold);
    out.writeInt(DaysToKeepExternalMail);
    out.writeBoolean( DeleteSMTPDelivered);
    out.writeBoolean(PublishAsLocalNewsGroup);
    out.writeInt(Options);
    out.writeInt(AuthorType);
    out.writeInt(UnixCreationTime);
    out.write(new byte[6*1]);
    out.writeString(DefaultFromAddress, 72);
    out.writeShort( wVersion);
  }

  protected void readFrom(WcInputStream in) throws IOException
  {
    super.readFrom(in);
    ObjectId = in.readInt();
    Number = in.readInt();
    Name = in.readString(60);
    in.skip(16);
    ConferenceSysop = in.readString(28);
    EchoTag = in.readString(64);
    ReplyToAddress = in.readString(72);
    Distribution = in.readString(72);
    MailType = in.readInt();
    PromptToKillMsg = in.readBoolean();
    PromptToKillAttach = in.readBoolean();
    AllowHighAscii = in.readBoolean();
    AllowCarbon = in.readBoolean();
    AllowReturnReceipt = in.readBoolean();
    LongHeaderFormat = in.readBoolean();
    AllowAttach = in.readBoolean();
    ShowCtrlLines = in.readBoolean();
    ValidateNames = in.readInt();
    DefaultFileGroup = in.readInt();
    MaxMessages = in.readInt();
    DaysToKeepReceivedMail = in.readInt();
    DaysToKeepPublicMail = in.readInt();
    RenumberThreshold = in.readInt();
    DaysToKeepExternalMail = in.readInt();
     DeleteSMTPDelivered = in.readBoolean();
    PublishAsLocalNewsGroup = in.readBoolean();
    Options = in.readInt();
    AuthorType = in.readInt();
    UnixCreationTime = in.readInt();
    in.skip(6*1);
    DefaultFromAddress = in.readString(72);
     wVersion = in.readUnsignedShort();
  }
}
