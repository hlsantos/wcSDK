// File: TMakewild.java
// (c) copyright 2002 Santronics Software Inc.
//
//****************************************************
// DO NOT EDIT THIS FILE!!!
// CPP2JAVA GENERATED FROM SOURCE FILE: wctype.h
//****************************************************
//

package COM.winserver.wildcat;

import java.io.IOException;

public class TMakewild extends WcRecord {
  public int Version;
  public String BBSName;
  public String SysopName;
  public String City;
  public String Phone;
  public String FirstCall;
  public String PacketId;
  public String RegString;
  public int SystemAccess;
  public int MaxLoginAttempts;
  public boolean FreeFormPhone;
  public boolean HideAnonFtpPassword;
  public boolean LogonLanguagePrompt;
  public boolean Assume8N1;
  public boolean LoginAskLocation;
  public String NewUserSecurity;
  public String DefaultExt;
  public String ThumbnailFile;
  public String OldDoorPath;
  public boolean EnableHttpProxy;
  public TWildcatFTP  FTPConfig;
  public TWildcatPOP3 POP3Config;
  public TWildcatLogOptions MAILLogOptions;
  public TWildcatLogOptions SMTPLogOptions;
  public TWildcatNNTP NNTPConfig;
  public boolean AllowLogonEmail;
  public boolean CaseSensitivePasswords;
  public int MsgHeaderCaseMode;
  public boolean SpamAllowAuth;
  public TWildcatSMTP SMTPConfig;
  public TWildcatHttpd HttpdConfig;
  public TWildcatTimeouts Timeouts;
  public byte[] DefaultColors;
  public int[] ExcludeBulletins;
  public int InstalledComponents;
  public boolean ResolveHostnames;
  public String BuildDate;
  public String DomainName;
  public boolean WindowsCharset;
  public boolean LogonUserNameOnly;

  // Total size
  public static final int SIZE = 0+4+52+28+32+28+28+12+8+4+4+4+4+4+4+4+24+4+16+260+4+256+TWildcatFTP.SIZE+TWildcatPOP3.SIZE+TWildcatLogOptions.SIZE+32+32+TWildcatLogOptions.SIZE+TWildcatNNTP.SIZE+4+4+4+4+TWildcatSMTP.SIZE+TWildcatHttpd.SIZE+TWildcatTimeouts.SIZE+28+40*4+4+4+16+64+4+4;

  // Constructors
  public TMakewild()
  {
  }

  public TMakewild(byte[] x)
  {
    fromByteArray(x);
  }

  // Methods
  protected void writeTo(WcOutputStream out) throws IOException
  {
    super.writeTo(out);
    out.writeInt(Version);
    out.writeString(BBSName, 52);
    out.writeString(SysopName, 28);
    out.writeString(City, 32);
    out.writeString(Phone, 28);
    out.writeString(FirstCall, 28);
    out.writeString(PacketId, 12);
    out.writeString(RegString, 8);
    out.writeInt(SystemAccess);
    out.writeInt(MaxLoginAttempts);
    out.writeBoolean(FreeFormPhone);
    out.writeBoolean(HideAnonFtpPassword);
    out.writeBoolean(LogonLanguagePrompt);
    out.writeBoolean(Assume8N1);
    out.writeBoolean(LoginAskLocation);
    out.writeString(NewUserSecurity, 24);
    out.writeString(DefaultExt, 4);
    out.writeString(ThumbnailFile, 16);
    out.writeString(OldDoorPath, 260);
    out.writeBoolean(EnableHttpProxy);
    out.write(new byte[256]);
     FTPConfig.writeTo(out);
    POP3Config.writeTo(out);
    MAILLogOptions.writeTo(out);
    out.write(new byte[32]);
    out.write(new byte[32]);
    SMTPLogOptions.writeTo(out);
    NNTPConfig.writeTo(out);
    out.writeBoolean(AllowLogonEmail);
    out.writeBoolean(CaseSensitivePasswords);
    out.writeInt(MsgHeaderCaseMode);
    out.writeBoolean(SpamAllowAuth);
    SMTPConfig.writeTo(out);
    HttpdConfig.writeTo(out);
    Timeouts.writeTo(out);
    out.write(DefaultColors);
    for (int i = 0; i < 40; i++) {
      if (i < ExcludeBulletins.length) {
        out.writeInt(ExcludeBulletins[i]);
      } else {
        out.write(new byte[4]);
      }
    }
    out.writeInt(InstalledComponents);
    out.writeBoolean(ResolveHostnames);
    out.writeString(BuildDate, 16);
    out.writeString(DomainName, 64);
    out.writeBoolean(WindowsCharset);
    out.writeBoolean(LogonUserNameOnly);
  }

  protected void readFrom(WcInputStream in) throws IOException
  {
    super.readFrom(in);
    Version = in.readInt();
    BBSName = in.readString(52);
    SysopName = in.readString(28);
    City = in.readString(32);
    Phone = in.readString(28);
    FirstCall = in.readString(28);
    PacketId = in.readString(12);
    RegString = in.readString(8);
    SystemAccess = in.readInt();
    MaxLoginAttempts = in.readInt();
    FreeFormPhone = in.readBoolean();
    HideAnonFtpPassword = in.readBoolean();
    LogonLanguagePrompt = in.readBoolean();
    Assume8N1 = in.readBoolean();
    LoginAskLocation = in.readBoolean();
    NewUserSecurity = in.readString(24);
    DefaultExt = in.readString(4);
    ThumbnailFile = in.readString(16);
    OldDoorPath = in.readString(260);
    EnableHttpProxy = in.readBoolean();
    in.skip(256);
     FTPConfig = new TWildcatFTP();  FTPConfig.readFrom(in);
    POP3Config = new TWildcatPOP3(); POP3Config.readFrom(in);
    MAILLogOptions = new TWildcatLogOptions(); MAILLogOptions.readFrom(in);
    in.skip(32);
    in.skip(32);
    SMTPLogOptions = new TWildcatLogOptions(); SMTPLogOptions.readFrom(in);
    NNTPConfig = new TWildcatNNTP(); NNTPConfig.readFrom(in);
    AllowLogonEmail = in.readBoolean();
    CaseSensitivePasswords = in.readBoolean();
    MsgHeaderCaseMode = in.readInt();
    SpamAllowAuth = in.readBoolean();
    SMTPConfig = new TWildcatSMTP(); SMTPConfig.readFrom(in);
    HttpdConfig = new TWildcatHttpd(); HttpdConfig.readFrom(in);
    Timeouts = new TWildcatTimeouts(); Timeouts.readFrom(in);
    DefaultColors = new byte[28]; in.read(DefaultColors);
    ExcludeBulletins = new int[40];
    for (int i = 0; i < 40; i++) {
      ExcludeBulletins[i] = in.readInt();
    }
    InstalledComponents = in.readInt();
    ResolveHostnames = in.readBoolean();
    BuildDate = in.readString(16);
    DomainName = in.readString(64);
    WindowsCharset = in.readBoolean();
    LogonUserNameOnly = in.readBoolean();
  }
}
