// File: TNodeInfo.java
// (c) copyright 1999 Santronics Software Inc.
//
//****************************************************
// DO NOT EDIT THIS FILE!!!
// CPP2JAVA GENERATED FROM SOURCE FILE: wctype.h
//****************************************************
//

package COM.winserver.wildcat;

import java.io.IOException;

public class TNodeInfo extends WcRecord {
  // Constants
  public static final int nsDown = 0;
  public static final int nsUp = 1;
  public static final int nsSigningOn = 2;
  public static final int nsLoggedIn = 3;
  public static final int SIZE_NODEINFO_ACTIVITY = 32;
  public static final int SIZE_NODEINFO_SPEED = 8;
  public static final int SIZE_NODEINFO_LASTCALLER = 48;
  public static final int SIZE_USER_FROM = 32;

  // Members
  public int NodeStatus;
  public int ServerState;
  public int ConnectionId;
  public String LastCaller;
  public TUserInfo User;
  public String UserFrom;
  public boolean UserPageAvailable;
  public String Activity;
  public String Speed;
  public long TimeCalled;
  public long CurrentTime;
  public int NodeNumber;
  public int MinutesLeft;

  // Total size
  public static final int SIZE = 0+4+4+4+48+TUserInfo.SIZE+32+4+4+32+8+8+8+4+4+4;

  // Constructors
  public TNodeInfo()
  {
  }

  public TNodeInfo(byte[] x)
  {
    fromByteArray(x);
  }

  // Methods
  protected void writeTo(WcOutputStream out) throws IOException
  {
    super.writeTo(out);
    out.writeInt(NodeStatus);
    out.writeInt(ServerState);
    out.writeInt(ConnectionId);
    out.writeString(LastCaller, 48);
    User.writeTo(out);
    out.writeString(UserFrom, 32);
    out.writeBoolean(UserPageAvailable);
    out.write(new byte[4]);
    out.writeString(Activity, 32);
    out.writeString(Speed, 8);
    out.writeLong(TimeCalled);
    out.writeLong(CurrentTime);
    out.write(new byte[4]);
    out.writeInt(NodeNumber);
    out.writeInt(MinutesLeft);
  }

  protected void readFrom(WcInputStream in) throws IOException
  {
    super.readFrom(in);
    NodeStatus = in.readInt();
    ServerState = in.readInt();
    ConnectionId = in.readInt();
    LastCaller = in.readString(48);
    User = new TUserInfo(); User.readFrom(in);
    UserFrom = in.readString(32);
    UserPageAvailable = in.readBoolean();
    in.skip(4);
    Activity = in.readString(32);
    Speed = in.readString(8);
    TimeCalled = in.readLong();
    CurrentTime = in.readLong();
    in.skip(4);
    NodeNumber = in.readInt();
    MinutesLeft = in.readInt();
  }
}
