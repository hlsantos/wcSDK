04/17/20 10:53 am


namespace wcSDK
{
	public static class wcDoor32API
	{
        ////!----------------------------------------------------------------
        ////! Group: wcDoor32.dll API
        ////! DWORD APIENTRY DoorRead(void *data, DWORD size);
        ////! Read bytes from input buffer
        ////! returns number of bytes read otherwise 0
        ////!----------------------------------------------------------------
        [DllImport("wcdoor32.dll", SetLastError=true)]
        public extern static uint DoorRead(ref byte[] data, uint size);

		////!----------------------------------------------------------------
		////! Group: wcDoor32 API
		////! BOOL APIENTRY DoorWrite(const void *data, DWORD size);
		////! Write byte to output buffer
		////! returns TRUE if data is written, otherwise see extended error
		////!----------------------------------------------------------------
		[DllImport("wcdoor32.dll", SetLastError=true)]
		public extern static bool DoorWrite(ref byte[] data, uint size);
    }
}

example usage:

For the DoorRead/DoorWrite functions, this is the example usage:

C/C++ working implementation for DoorRead():

    BYTE c;
    DWORD rd = (DoorRead(&c, 1);

C# failed implementation for DoorRead:

    //byte[] ch = new byte[1];         // tried this
    System.Byte[] ch = new byte[1];
    uint rd = wcDoor32API.DoorRead(ref ch, 1);


C/C++ working implementation for DoorWrite():

    char *buf = "hello world!";
    BOOL f = DoorWrite((BYTE *)buf, (DWORD)strlen(buf));

C# failed implementation for DoorWrite:

    String buf = "Hello world!";
    //byte[] data = System.Text.Encoding.UTF8.GetBytes(buf); // tried this
    byte[] data = Encoding.ASCII.GetBytes(buf);
    bool f =  wcDoor32API.DoorWrite(ref data, buf.Length);


--------------




namespace wcSDK
{
    public static class wcServerAPI
	{

        ////!----------------------------------------------------------------
        ////! Group: wcsrv2.dll API
        ////! BOOL APIENTRY WcWriteFile(WCHANDLE h, LPCVOID buffer, DWORD requested, LPDWORD written);
        ////! Read bytes from input buffer
        ////! returns number of bytes read otherwise 0
        ////!----------------------------------------------------------------
        [DllImport("wcsrv2.dll", SetLastError=true)]
        public extern static bool WcWriteFile(int h, ref byte[] buffer, uint requested, ref uint Written);
    }

}

Some issue with WcReadFile():

C/C++ working implementation for WcReadRead():

    BYTE buf[1024];
    DWORD n;
    BOOL rd = WcReadFile(hFile, buf, sizeof(buf), &n);

C# failed implementation for WcReadFile

    byte[] data = new byte[1024];
    //System.Byte[] data = new System.Byte[1024];
    uint n;
    bool b = wcServerAPI.WcReadFile(fv, ref data, data.Length, ref n);

Some issue with WcWriteFile()

For the working C/C++ implementation:

    char *buf = "Hello there!";
    DWORD n;
    BOOL rd = WcWriteFile(f, buf, strlen(buf), &n);


For the C# implemention:


    String buf = "Hello there!";
    //byte[] data = System.Text.Encoding.UTF8.GetBytes(buf); // tried this
    byte[] data = Encoding.ASCII.GetBytes(buf);


----
https://social.msdn.microsoft.com/Forums/windowsdesktop/en-US/5c1b9065-0021-434d-bb8c-ae0b0ea0f02e/interop-importing-win32-dll-functions-and-void-data-io-parameters?forum=clr
namespace wcSDK
{
	public static class wcServerAPI
	{
		////!----------------------------------------------------------------
		////! Group: wcDoor32 API
		////! BOOL APIENTRY DoorWrite(const void *data, DWORD size);
		////! Write byte to output buffer
		////! returns TRUE if data is written, otherwise see extended error
		////!----------------------------------------------------------------
		[DllImport("wcdoor32.dll", SetLastError=true)]
		public extern static bool DoorWrite(ref byte[] data, uint size);

        ////!----------------------------------------------------------------
        ////! Group: wcsrv2.dll API
        ////! BOOL APIENTRY WcReadFile(WCHANDLE h, LPVOID buffer, DWORD requested, LPDWORD read);
        ////! Read bytes from input buffer
        ////! returns TRUE if successful, see read bytes
        ////!----------------------------------------------------------------
        [DllImport("wcsrv2.dll", SetLastError=true)]
        public extern static bool WcReadFile(int h, ref byte[] buffer, uint requested, ref uint read);
    }
}

Example usage:

C/C++ working implementation for DoorWrite():

    char *buf = "hello world!";
    BOOL f = DoorWrite((BYTE *)buf, (DWORD)strlen(buf));

C/C++ working implementation for WcReadRead():

    BYTE data[1024];
    DWORD n;
    BOOL rd = WcReadFile(hFile, data, sizeof(data), &n);

C# failed implementation for DoorWrite:

    String buf = "Hello world!";
    //byte[] data = System.Text.Encoding.UTF8.GetBytes(buf); // tried this
    byte[] data = Encoding.ASCII.GetBytes(buf);
    bool b =  wcServerAPI.DoorWrite(ref data, buf.Length);


C# failed implementation for WcReadFile

    byte[] data = new byte[1024];
    //System.Byte[] data = new System.Byte[1024];
    uint n;
    bool b = wcServerAPI.WcReadFile(hFile, ref data, data.Length, ref n);






Thanks


