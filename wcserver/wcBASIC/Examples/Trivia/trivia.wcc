//***********************************************************************
// (c) Copyright 1999-2019 Santronics Software, Inc. All Rights Reserved.
// This WCBASIC source is copyrighted by Santronics Software Inc. Any
// modification made to this source must retain this copyright statement.
//-----------------------------------------------------------------------
// File Name : trivia.wcc
// Subsystem :
// Date      : 11/14/1998
// Author    : SSI
// About Me  :
//
// This is a source code for the example Trivia client for
// TTY/ANSI connections.
//
// Revision History:
// Build  Date     Author  Comments
// -----  -------- ------  -------------------------------
// 454.8  05/08/19 HLS     Updated to v8.0
//***********************************************************************

#include "cmdline.wch"
#include "util.wch"
#include "winsock.wch"

#include "wcTrivia-Helper.wcc"

const  TCP_SERVICE_NAME =  "wcTrivia Service"

dim s as TSocket = INVALID_SOCKET
dim wsadata as TWSAData
if WSAStartup(0x0101, wsadata) <> 0 then
  print "@E@WSAStartup failed: "; GetLastError
  print
  WaitEnter
  end
end if
dim ws as TWildcatService
if not GetServiceByName(TCP_SERVICE_NAME, ws) then
  print "@E@Trivia service not found: "; TCP_SERVICE_NAME
  print
  WaitEnter
  end
end if

s = socket(AF_INET, SOCK_STREAM, 0)
if s <> INVALID_SOCKET then
  dim sa as TSockAddr
  sa.sin_family = AF_INET
  sa.sin_port = htons(ws.Port)
  sa.sin_addr.S_addr = ws.Address
  if ws_connect(s, sa, sizeof(sa)) = 0 then
    dim r as string
    if GetResponse(s, r) = 220 then
      print "@T@Welcome to the Wildcat! Trivia sample!"
      print
      dim quit as boolean = False
      do while not quit
        dim t as string = "NEXT"+chr(13)+chr(10)
        ws_send(s, @t, 6, 0)
        if GetResponse(s, r) <> 200 then
          print "@E@Internal synchronization error, exiting"
          print
          WaitEnter
          exit do
        end if
        dim question as string = GetField(r, 1)
        dim answer as string = GetField(r, 2)
        dim hint as integer = 0
        do
          print "@N@"; question
          print "@U@  "; GetHint(answer, hint)
          print "@N@?";
          t = InputString(0)
          if t = "" then
            dec(hint)
          elseif ucase(t) = left("QUIT", len(t)) then
            quit = True
            exit do
          elseif ucase(t) = ucase(answer) then
            print "@E@You got it!"
            print
            exit do
          else
            print "@T@Try again..."
            print
          end if
          inc(hint)
        loop
      loop
    end if
    closesocket(s)
    s = INVALID_SOCKET
  else
    print "@E@Connect failed: "; GetLastError
    print
    WaitEnter()
  end if
else
  print "@E@Invalid socket: "; GetLastError
  print
  WaitEnter()
end if
WSACleanup()

catch err_nocarrier

if s <> INVALID_SOCKET then
  closesocket(s)
end if
WSACleanup()

